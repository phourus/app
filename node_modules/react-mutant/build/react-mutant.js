(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Mutant = function Mutant (props, options) {   
    var parent;
    var _evts = [];
    var _history = [];
    var strict = false;
    if (options) {
        if (options.strict && options.strict === true) {
            strict = true;
        }
    }
    for (var k in props) {
        this[k] = props[k];
    }   
    parent = this;
    this.mutant = {
        get: function () { 
            var copy = JSON.parse(JSON.stringify(parent));
            delete copy.mutant;
            return copy;
        },
        set: function (obj) {
            var changes = [];
            for (var k in obj) {
                if (parent[k] !== obj[k]) {
                    var c = {};
                    c[k] = obj[k];
                    changes.push(c)
                    parent[k] = obj[k];
                }
            }
            if (!changes.length) {
                return false;   
            }            
            _history.push(changes);
            this.trigger("update", parent);
            return changes;
        },
        on: function (trigger, cb) {
            _evts[trigger] = cb;
        },
        off: function (trigger) {
            delete _evts[trigger];
        },
        trigger: function (trigger, data) {
            if (_evts[trigger]) {
                _evts[trigger].call(this, data);
                return true;
            } 
            return false;
        },
        history: function () {
            return _history;   
        }
    }
    if (strict === true) {
        Object.seal(parent);
    }
    return this;
};

module.exports = Mutant;
},{}]},{},[1]);
